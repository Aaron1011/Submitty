<script type="text/javascript">
    function ExtractBuckets(){
        var x = [];
        var bucket_list = $("#buckets_used_list").find("li");
        bucket_list.each(function(idx,li){
            x.push($(li).text());
        });

        $("#generate_json").val(JSON.stringify(x));
        $("#custom_form").submit();
    }

    //Forces element's value to be in range [0.0,100.0]
    function ClampPercent(el){
        el.value = Math.min(Math.max(el.value,0.0),100.0);
        UpdateUsedPercentage();
    }

    function UpdateUsedPercentage(){
        var val = 0.0;
        $("input[id^='percent']").filter(function(){
            return $(this).parent().css("display") != "none";
        }).each(function(){
            console.log($(this).attr('id'));
            console.log($(this).val());
            val += parseFloat($(this).val());
        });
        $("#used_percentage").text(val.toString() + "%");
        if(val>100.0){
            $("#used_percentage").css({"color":"red","font-weight":"bold"});
        }
        else{
            $("#used_percentage").css({"color":"black","font-weight":""});
        }
    }
</script>

<div class="content">
    Form would be printed here. Right now the data received is:<br />
    <pre>{{ customization_data_print }}</pre>
    <br />
    If you'd like to try submitting something...
    <form id="custom_form" method="post" action="">
        <input type="hidden" id="generate_json" name="generate_json" value="true" />
        Fake text box: <input type="text" name="demo_text" value="" /><br />
        <input type="submit" name="generate_json2" value="Submit" onclick="ExtractBuckets();"/>
    </form>
    <div id="list_wrapper">
        <div style="width:45%;float:left;" id="buckets_used">
            <h3>Assigned Buckets</h3>
            <ol id="buckets_used_list" style="min-height:50px;background-color:beige;">
                {%  for bucket in used_buckets %}
                    <li>
                        <div class="bucket-percent" style="display: inline;">
                            <input type="text" value="0" onblur="ClampPercent(this);" id="percent-{{ bucket }}"><span style="margin-right: 10px;">%</span>
                        </div>
                        {{ bucket }}
                    </li>
                {% endfor %}
            </ol>
            Total: <span id="used_percentage">0%</span>
        </div>
        <div style="width:45%;display:inline-block;margin-left:50px;" id="buckets_available">
            <h3>Available Buckets</h3>
            <ol id="buckets_available_list" style="min-height:50px;background-color:lightgreen;">
                {%  for bucket in available_buckets %}
                    <li>
                        <div class="bucket-percent" style="display: none;">
                            <input type="text" value="0" onblur="ClampPercent(this);" id="percent-{{ bucket }}"><span style="margin-right: 10px;">%</span>
                        </div>
                        {{ bucket }}
                    </li>
                {% endfor %}
            </ol>
        </div>
    </div>
    <div id="Category/Gradeable Configuration:">
    </div>
</div>

<style type="text/css">
    #buckets_available_list li{
        font-weight: bold;
        list-style-type: none;
    }

    #buckets_used_list li{
        font-style: italic;
        list-style-type: none;
    }
</style>

<script type="text/javascript">
    var old_index;
    var new_index;
    var old_parent;
    var new_parent;
    var bucket_lists = $("#buckets_available_list,#buckets_used_list");
    var available_list = $("#buckets_available_list");
    var used_list = $("#buckets_used_list");
    bucket_lists.sortable({
        connectWith: "#buckets_available_list,#buckets_used_list",
        start: function(e,u){
            old_index = u.item.index();
            old_parent = u.item.parent().attr("id");
        },
        update: function(e,u){
            /* TODO: The UI either needs to be visually clear or we need to do some sort of height adjustment
             * to make sure that one list isn't way longer than the other, otherwise it won't be intuitive where
             * the user can and can't drop a bucket successfully.
             */

            new_index = u.item.index();
            new_parent = u.item.parent().attr("id");
            //console.log("Moved " + u.item.text() + " from " + old_parent + "," + old_index.toString() + " to " + new_parent + "," + new_index.toString());

            //TODO: Implement this part!
            //Change position of an existing used item
            if (old_parent == new_parent && new_parent == "buckets_used_list"){
                console.log("Rearranging!")
            }
            else if(old_parent !=  new_parent && this.id == new_parent){
                //XXX: In case of an update that moves across lists, we make it the new parent's job

                var percent_input = $(u.item).find(".bucket-percent");

                //Added a new bucket from available->used
                if(new_parent == "buckets_used_list"){
                    console.log("Adding!")
                    percent_input.css("display","inline");
                }
                else{ //Removed a bucket from used
                    console.log("Removing!")
                    percent_input.css("display","none");
                }

                UpdateUsedPercentage();
            }
        }
    });
    bucket_lists.disableSelection();
</script>